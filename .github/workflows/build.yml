name: Build

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build
    # runs-on: arc-runner-set-dind
    # runs-on: ubuntu-latest 
    runs-on: arc-runner-set
    steps:
      - uses: docker/login-action@v1
        with:
          registry: harbor.korporate.org
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
          with:
          token: ${{ secrets.ARGO_TOKEN }}
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Compose before run docker-compose
        run: composer update --ignore-platform-reqs
      - name: Start containers
        run: docker compose -f "docker-compose.yml" up -d --build
#       # - name: wait 25s
#       #   run: sleep 25
#       # - name: Run tests
#       #   run: docker compose exec -T php /var/www/app/vendor/vendor/bin/phpunit
      - name: Stop containers
        if: always()
        run: docker compose -f "docker-compose.yml" down
      - name: Build nginx artifact
        run: docker image build -f resources/ops/docker/nginx/Dockerfile -t harbor.korporate.org/myapp/myapp-nginx:1.0 --target nginx .
      - name: Build fpm artifact
        run: docker image build -f resources/ops/docker/fpm/Dockerfile -t harbor.korporate.org/myapp/myapp-fpm:1.0 --target fpm .
      - name: Push nginx artifact to harbor
        run: docker push harbor.korporate.org/myapp/myapp-nginx:1.0
      - name: Push fpm artifact to harbor
        run: docker push harbor.korporate.org/myapp/myapp-fpm:1.0
      - name: Install yq
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod a+x /usr/local/bin/yq
      - name: Clone Repository
        run: |
          git config --global user.name "${{secrets.USERNAME_GITHUB}}"
          git config --global user.email "${{secrets.EMAIL_GITHUB}}"
          cd /tmp
          git clone https://github.com/0769233558/myapp.git
          cd myapp
      - name: Update YAML File for nginx
        run: yq -i '.spec.template.spec.containers[0].image = "harbor.korporate.org/myapp/myapp-nginx:1.0"' 'resources/ops/kubernetes/deployment.yaml'
      - name: Update YAML File for fpm
        run: yq -i '.spec.template.spec.containers[1].image = "harbor.korporate.org/myapp/myapp-fpm:1.0"' 'resources/ops/kubernetes/deployment.yaml'
      - name: Push to Repo
        run: |
          git add .
          git commit -m "Updated by GitHub Actions"
          git push https://github.com/0769233558/myapp.git --all
